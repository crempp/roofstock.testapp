name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
          description: 'Environment to deploy to'
          type: environment
          default: 'dev'
          required: true

jobs:
  ci:
    name: Run CI
    uses: ./.github/workflows/ci.yml

  build_push_image:
    runs-on: ubuntu-latest
    needs: [ci]

    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v3

      - name: "üîß setup buildx"
        uses: docker/setup-buildx-action@v2
      
      - name: "üîí docker repository login"
        run: |
          echo "Logging into Docker repository for ${{ inputs.environment }}/${{ github.event.inputs.environment }}/${GITHUB_REF_NAME}"
        # uses: docker/login-action@v2
        # with:
        #   registry: ${{ secrets.ACR_NAME }}
        #   username: ${{ secrets.ACR_LOGIN }}
        #   password: ${{ secrets.ACR_PASSWORD }}
        #   ecr: auto
        #   logout: true

      - name: Build and Push Image
        run: |
          echo "Building and pushing to ${{ inputs.environment }}/${{ github.event.inputs.environment }}/${GITHUB_REF_NAME}"
        # uses: docker/build-push-action@v3
        # with:
        #   context: .
        #   push: true
        #   tags: ${{secrets.ACR_NAME}}/testapp-website:latest

  release:
    runs-on: ubuntu-20.04
    needs: build_push_image

    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v3

      - name: "‚ò∏Ô∏è install helm"
        uses: Azure/setup-helm@v1
        with:
          version: v3.3.1

      - name: "üîí get aks credentials"
        run: |
          echo "Getting AKS creds for ${{ inputs.environment }}/${{ github.event.inputs.environment }}/${GITHUB_REF_NAME}"
        # uses: Azure/aks-set-context@v2
        # with:
        #   creds: ${{ secrets.AZURE_CREDENTIALS }}
        #   resource-group: production-resourceGroup
        #   cluster-name: test-app

      - name: "üöÄ run helm deploy"
        run: |
          echo "Running Helm upgrade for ${{ inputs.environment }}/${{ github.event.inputs.environment }}/${GITHUB_REF_NAME}"
        # run: |
        #   helm upgrade \
        #     --install \
        #     --create-namespace \
        #     --atomic \
        #     --wait \
        #     --namespace production \
        #     test-app \
        #     ./testapp-website \
        #     --set image.repository=${{ secrets.ACR_NAME }} \
        #     --set dns.name=${{ secrets.DNS_NAME }}